{"version":3,"file":"items.directive.d.ts","sources":["items.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ViewContainerRef } from '@angular/core';\nimport { ComplexBase, ArrayBase } from '@syncfusion/ej2-angular-base';\n/**\n * 'e-accordionitem' directive represent a item of the Angular Accordion.\n * It must be contained in a Accordion component(`ejs-accordion`).\n * ```html\n * <ejs-accordion>\n *   <e-accordionitems>\n *    <e-accordionitem header='Header1'></e-accordionitem>\n *    <e-accordionitem header='Header2' content='Content2'></e-accordionitem>\n *   </e-accordionitems>\n * </ejs-accordion>\n * ```\n */\nexport declare class AccordionItemDirective extends ComplexBase<AccordionItemDirective> {\n    private viewContainerRef;\n    directivePropList: any;\n    /**\n     * Defines single/multiple classes (separated by a space) are to be used for Accordion item customization.\n     * @default null\n     */\n    cssClass: any;\n    /**\n     * Sets true to disable an accordion item.\n     * @default false\n     */\n    disabled: any;\n    /**\n     * Sets the expand (true) or collapse (false) state of the Accordion item. By default, all the items are in a collapsed state.\n     * @default false\n     */\n    expanded: any;\n    /**\n     * Defines an icon with the given custom CSS class that is to be rendered before the header text.\n     * Add the css classes to the `iconCss` property and write the css styles to the defined class to set images/icons.\n     * Adding icon is applicable only to the header.\n     *\n     * @default null\n     */\n    iconCss: any;\n    /**\n     * Sets unique ID to accordion item.\n     * @default null\n     */\n    id: any;\n    /**\n     * Sets false to hide an accordion item.\n     * @default true\n     */\n    visible: any;\n    /**\n     * Sets the header text to be displayed for the Accordion item.\n     * You can set the title of the Accordion item using `header` property.\n     * It also supports to include the title as `HTML element`, `string`, or `query selector`.\n     *\n     * @default null\n     */\n    header: any;\n    /**\n     * Sets the text content to be displayed for the Accordion item.\n     * You can set the content of the Accordion item using `content` property.\n     * It also supports to include the title as `HTML element`, `string`, or `query selector`.\n     *\n     * @default null\n     */\n    content: any;\n    constructor(viewContainerRef: ViewContainerRef);\n}\n/**\n * AccordionItem Array Directive\n * @private\n */\nexport declare class AccordionItemsDirective extends ArrayBase<AccordionItemsDirective> {\n    constructor();\n}\n"]}