{"version":3,"file":"treeview.component.d.ts","sources":["treeview.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef, ViewContainerRef, Renderer2, Injector } from '@angular/core';\nimport { IComponentBase } from '@syncfusion/ej2-angular-base';\nimport { TreeView } from '@syncfusion/ej2-navigations';\nexport declare const inputs: string[];\nexport declare const outputs: string[];\nexport declare const twoWays: string[];\n/**\n * TreeView component is used to represent the hierarchical data in tree like structure with advanced functions to perform edit, drag and drop, selection with check-box and more.\n * ```html\n * <ej-treeview allowDragAndDrop='true'></ej-treeview>\n * ```\n */\nexport declare class TreeViewComponent extends TreeView implements IComponentBase {\n    private ngEle;\n    private srenderer;\n    private viewContainerRef;\n    private injector;\n    context: any;\n    tagObjects: any;\n    actionFailure: any;\n    created: any;\n    dataBound: any;\n    dataSourceChanged: any;\n    destroyed: any;\n    drawNode: any;\n    keyPress: any;\n    nodeChecked: any;\n    nodeChecking: any;\n    nodeClicked: any;\n    nodeCollapsed: any;\n    nodeCollapsing: any;\n    nodeDragStart: any;\n    nodeDragStop: any;\n    nodeDragging: any;\n    nodeDropped: any;\n    nodeEdited: any;\n    nodeEditing: any;\n    nodeExpanded: any;\n    nodeExpanding: any;\n    nodeSelected: any;\n    nodeSelecting: any;\n    /**\n     * Specifies a template to render customized content for all the nodes. If the `nodeTemplate` property\n     * is set, the template content overrides the displayed node text. The property accepts template string\n     * [template string](https://ej2.syncfusion.com/documentation/common/template-engine/)\n     * or HTML element ID holding the content. For more information on template concept, refer to\n     * [Template](../../treeview/template/).\n     * @default null\n     */\n    nodeTemplate: any;\n    constructor(ngEle: ElementRef, srenderer: Renderer2, viewContainerRef: ViewContainerRef, injector: Injector);\n    ngOnInit(): void;\n    ngAfterViewInit(): void;\n    ngOnDestroy(): void;\n    ngAfterContentChecked(): void;\n    registerEvents: (eventList: string[]) => void;\n    addTwoWay: (propList: string[]) => void;\n}\n"]}