{"version":3,"file":"ej2-angular-lists.umd.min.js","sources":["~/@syncfusion/ej2-angular-lists/src/list-view/listview.component.ts","~/@syncfusion/ej2-angular-lists/src/list-view/listview.module.ts","~/@syncfusion/ej2-angular-lists/src/list-view/listview-all.module.ts"],"sourcesContent":["import { Component, ElementRef, ViewContainerRef, ChangeDetectionStrategy, QueryList, Renderer2, Injector, ValueProvider, ContentChild } from '@angular/core';\nimport { ComponentBase, IComponentBase, applyMixins, ComponentMixins, PropertyCollectionInfo, setValue } from '@syncfusion/ej2-angular-base';\nimport { ListView } from '@syncfusion/ej2-lists';\nimport { Template } from '@syncfusion/ej2-angular-base';\n\n\nexport const /** @type {?} */ inputs: string[] = ['animation','checkBoxPosition','cssClass','dataSource','enable','enableHtmlSanitizer','enablePersistence','enableRtl','enableVirtualization','fields','groupTemplate','headerTemplate','headerTitle','height','htmlAttributes','locale','query','showCheckBox','showHeader','showIcon','sortOrder','template','width'];\nexport const /** @type {?} */ outputs: string[] = ['actionBegin','actionComplete','actionFailure','select'];\nexport const /** @type {?} */ twoWays: string[] = [''];\n/**\n * Represents Angular ListView Component\n * ```\n * <ejs-listview [dataSource]='data'></ejs-listview>\n * ```\n */\n@ComponentMixins([ComponentBase])\nexport class ListViewComponent extends ListView implements IComponentBase {\npublic context : any;\npublic tagObjects: any;\n\tactionBegin: any;\n\tactionComplete: any;\n\tactionFailure: any;\npublic select: any;\n/**\n * The ListView component supports to customize the content of each list items with the help of `template` property.\n * \n * {% codeBlock src='listview/template/index.md' %}{% endcodeBlock %}\n *     \n * \\@default null\n * @deprecated\n */\n@Template()\n    public template: any;\n/**\n * The ListView has an option to custom design the group header title with the help of `groupTemplate` property.\n * \n * {% codeBlock src=\"listview/groupTemplate/index.md\" %}{% endcodeBlock %}\n *     \n * \\@default null\n * @deprecated\n */\n@Template()\n    public groupTemplate: any;\n/**\n * The ListView has an option to custom design the ListView header title with the help of `headerTemplate` property.\n * \n * {% codeBlock src=\"listview/headerTemplate/index.md\" %}{% endcodeBlock %}\n *     \n * \\@default null\n * @deprecated\n */\n@Template()\n    public headerTemplate: any;\n/**\n * @param {?} ngEle\n * @param {?} srenderer\n * @param {?} viewContainerRef\n * @param {?} injector\n */\nconstructor(private ngEle: ElementRef,\nprivate srenderer: Renderer2,\nprivate viewContainerRef:ViewContainerRef,\nprivate injector: Injector) {\n        super();\n        this.element = this.ngEle.nativeElement;\n        this.injectedModules = this.injectedModules || [];\n        try {\n                let mod = this.injector.get('ListsVirtualization');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\n        this.registerEvents(outputs);\n        this.addTwoWay.call(this, twoWays);\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.context  = new ComponentBase();\n    }\n/**\n * @return {?}\n */\npublic ngOnInit() {\n        this.context.ngOnInit(this);\n    }\n/**\n * @return {?}\n */\npublic ngAfterViewInit(): void {\n        this.context.ngAfterViewInit(this);\n    }\n/**\n * @return {?}\n */\npublic ngOnDestroy(): void {\n        this.context.ngOnDestroy(this);\n    }\n/**\n * @return {?}\n */\npublic ngAfterContentChecked(): void {\n        \n        this.context.ngAfterContentChecked(this);\n    }\npublic registerEvents: (eventList: string[]) => void;\npublic addTwoWay: (propList: string[]) => void;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ejs-listview',\n    inputs: inputs,\n    outputs: outputs,\n    template: '',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    queries: {\n\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n{type: ViewContainerRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'template': [{ type: ContentChild, args: ['template', ] },],\n'groupTemplate': [{ type: ContentChild, args: ['groupTemplate', ] },],\n'headerTemplate': [{ type: ContentChild, args: ['headerTemplate', ] },],\n};\n}\n\nfunction ListViewComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nListViewComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nListViewComponent.ctorParameters;\n/** @type {?} */\nListViewComponent.propDecorators;\n/** @type {?} */\nListViewComponent.prototype.context;\n/** @type {?} */\nListViewComponent.prototype.tagObjects;\n/** @type {?} */\nListViewComponent.prototype.actionBegin;\n/** @type {?} */\nListViewComponent.prototype.actionComplete;\n/** @type {?} */\nListViewComponent.prototype.actionFailure;\n/** @type {?} */\nListViewComponent.prototype.select;\n/**\n * The ListView component supports to customize the content of each list items with the help of `template` property.\n * \n * {% codeBlock src='listview/template/index.md' %}{% endcodeBlock %}\n *     \n * \\@default null\n * @deprecated\n * @type {?}\n */\nListViewComponent.prototype.template;\n/**\n * The ListView has an option to custom design the group header title with the help of `groupTemplate` property.\n * \n * {% codeBlock src=\"listview/groupTemplate/index.md\" %}{% endcodeBlock %}\n *     \n * \\@default null\n * @deprecated\n * @type {?}\n */\nListViewComponent.prototype.groupTemplate;\n/**\n * The ListView has an option to custom design the ListView header title with the help of `headerTemplate` property.\n * \n * {% codeBlock src=\"listview/headerTemplate/index.md\" %}{% endcodeBlock %}\n *     \n * \\@default null\n * @deprecated\n * @type {?}\n */\nListViewComponent.prototype.headerTemplate;\n/** @type {?} */\nListViewComponent.prototype.registerEvents;\n/** @type {?} */\nListViewComponent.prototype.addTwoWay;\n/** @type {?} */\nListViewComponent.prototype.ngEle;\n/** @type {?} */\nListViewComponent.prototype.srenderer;\n/** @type {?} */\nListViewComponent.prototype.viewContainerRef;\n/** @type {?} */\nListViewComponent.prototype.injector;\n}\n\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ListViewComponent } from './listview.component';\n/**\n * NgModule definition for the ListView component.\n */\nexport class ListViewModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [CommonModule],\n    declarations: [\n        ListViewComponent\n    ],\n    exports: [\n        ListViewComponent\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ListViewModule_tsickle_Closure_declarations() {\n/** @type {?} */\nListViewModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nListViewModule.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule, ValueProvider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ListViewComponent } from './listview.component';\nimport { ListViewModule } from './listview.module';\nimport {Virtualization} from '@syncfusion/ej2-lists';\n\n\nexport const /** @type {?} */ VirtualizationService: ValueProvider = { provide: 'ListsVirtualization', useValue: Virtualization};\n/**\n * NgModule definition for the ListView component with providers.\n */\nexport class ListViewAllModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [CommonModule, ListViewModule],\n    exports: [\n        ListViewModule\n    ],\n    providers:[\n        VirtualizationService\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ListViewAllModule_tsickle_Closure_declarations() {\n/** @type {?} */\nListViewAllModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nListViewAllModule.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["inputs","outputs","twoWays","exports","ListViewComponent","_super","ngEle","srenderer","viewContainerRef","injector","_this","call","this","element","nativeElement","injectedModules","mod","get","indexOf","push","_a","registerEvents","addTwoWay","setValue","context","ComponentBase","__extends","prototype","ngOnInit","ngAfterViewInit","ngOnDestroy","ngAfterContentChecked","ListView","decorators","type","Component","args","selector","template","changeDetection","ChangeDetectionStrategy","OnPush","queries","ctorParameters","ElementRef","Renderer2","ViewContainerRef","Injector","propDecorators","ContentChild","groupTemplate","headerTemplate","__decorate","Template","ComponentMixins","__metadata","ListViewModule","NgModule","imports","CommonModule","declarations","VirtualizationService","provide","useValue","Virtualization","ListViewAllModule","providers"],"mappings":"owCAMaA,GAAmB,YAAa,mBAAmB,WAAW,aAAa,SAAS,sBAAsB,oBAAoB,YAAY,uBAAuB,SAAS,gBAAgB,iBAAiB,cAAc,SAAS,iBAAiB,SAAS,QAAQ,eAAe,aAAa,WAAW,YAAY,WAAW,SAClUC,GAAoB,cAAe,iBAAiB,gBAAgB,UACpEC,GAAoB,IAQjCC,EAAAC,kBAAA,SAAAC,GA2CA,SAAAD,EAEwBE,EAA2BC,EAA8BC,EAA2CC,GAF5H,IAAAC,EAIQL,EAJRM,KAAAC,OAAAA,KAEwBF,EAAxBJ,MAAwBA,EAA2BI,EAAnDH,UAAmDA,EAA8BG,EAAjFF,iBAAiFA,EAA2CE,EAA5HD,SAA4HA,EAGpHC,EAAKG,QAAUH,EAAKJ,MAAMQ,cAC1BJ,EAAKK,gBAAkBL,EAAKK,oBAC5B,IACQ,IAAIC,EAAMN,EAAKD,SAASQ,IAAI,wBACc,IAAvCP,EAAKK,gBAAgBG,QAAQF,IAC5BN,EAAKK,gBAAgBI,KAAKH,GAEhC,MAAOI,WAEbV,EAAKW,eAAepB,GACpBS,EAAKY,UAAUX,KAAKD,EAAMR,GAC1BqB,EAAAA,SAAS,kBAAmBb,EAAMA,EAAKF,kBACvCE,EAAKc,QAAW,IAAIC,EAAAA,gBAuD5B,OAnHuCC,EAAvCtB,EAAAC,GA8DKD,EAALuB,UAAAC,SAAK,WAIGhB,KAHKY,QAAQI,SAAShB,OAGzBR,EAALuB,UAAAE,gBAAK,WAMGjB,KALKY,QAAQK,gBAAgBjB,OAGhCR,EAALuB,UAAAG,YAAK,WAQGlB,KAPKY,QAAQM,YAAYlB,OAG5BR,EAALuB,UAAAI,sBAAK,WAWGnB,KATKY,QAAQO,sBAAsBnB,OAuC3CR,EAnH8B,CAAS4B,EAAAA,UAiFhC5B,EAAAA,kBAAP6B,aACEC,KAAMC,EAAAA,UAAWC,OASfC,SARU,eASVrC,OARQA,EASRC,QARSA,EASTqC,SARU,GASVC,gBARiBC,EAAAA,wBAAwBC,OASzCC,eAFHtC,EAAAA,kBAADuC,eAAC,WAAA,QAWAT,KAfCU,EAAAA,aAgBDV,KAAMW,EAAAA,YACNX,KAAMY,EAAAA,mBACNZ,KAAMa,EAAAA,YARA3C,EAAAA,kBAAP4C,gBAWAV,WAVeJ,KAAMe,EAAAA,aAAcb,MAAM,cAWzCc,gBAVoBhB,KAAMe,EAAAA,aAAcb,MAAM,mBAW9Ce,iBAVqBjB,KAAMe,EAAAA,aAAcb,MAAM,qBAvF3CgB,GAICC,EAAAA,oCAJLjD,EAAAA,kBAAAuB,UAAA,gBAAA,GAUIyB,GAKCC,EAAAA,oCALLjD,EAAAA,kBAAAuB,UAAA,qBAAA,GAUIyB,GAMCC,EAAAA,oCANLjD,EAAAA,kBAAAuB,UAAA,sBAAA,GApCavB,EAAAA,kBAAbgD,GACCE,EAAAA,iBAAA7B,EAAAA,gBA4CD8B,EAAA,qBAA+BX,EAAAA,WAA+BC,EAAAA,UAAoCC,EAAAA,iBAAoCC,EAAAA,YA7CzH3C,EAAAA,mBCVb,IAAAoD,EAAA,kBAAA,aAAA,GAEqCA,EAArCvB,aACEC,KAAMuB,EAAAA,SAAUrB,OADdsB,SAESC,EAAAA,cADTC,cACIxD,EAAAA,mBAEJD,SACIC,EAAAA,uBAOPoD,EAADb,eAAC,WAAA,UCbM,IAAMkB,GAAyCC,QAAS,sBAAuBC,SAAUC,EAAAA,gBAIhGC,EAAA,kBAAA,aAAA,GAEwCA,EAAxChC,aACEC,KAAMuB,EAAAA,SAAUrB,OADdsB,SAESC,EAAAA,aAAeH,GADxBrD,SACIqD,GAEJU,WACIL,OAOPI,EAADtB,eAAC,WAAA"}
