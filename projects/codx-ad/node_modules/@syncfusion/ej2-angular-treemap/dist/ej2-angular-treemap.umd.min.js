/*!
*  filename: ej2-angular-treemap.umd.min.js
*  version : 19.4.52
*  Copyright Syncfusion Inc. 2001 - 2020. All rights reserved.
*  Use of this code is subject to the terms of our license.
*  A copy of the current license can be obtained at any time by e-mailing
*  licensing@syncfusion.com. Any infringement will be prosecuted under
*  applicable laws. 
*/
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@syncfusion/ej2-angular-base"),require("@syncfusion/ej2-treemap"),require("@angular/common")):"function"==typeof define&&define.amd?define(["exports","@angular/core","@syncfusion/ej2-angular-base","@syncfusion/ej2-treemap","@angular/common"],t):t(e["ej2-angular-treemap"]={},e.ng.core,e.ej2.angular.base,e.ej2.treemap,e.ng.common)}(this,function(e,t,r,n,o){"use strict";var i=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])};return function(t,r){function n(){this.constructor=t}e(t,r),t.prototype=null===r?Object.create(r):(n.prototype=r.prototype,new n)}}(),a=["color","from","label","maxOpacity","minOpacity","showLegend","to","value"],l=[],c=function(e){function t(t){var n=e.call(this)||this;return n.viewContainerRef=t,r.setValue("currentInstance",n,n.viewContainerRef),n.registerEvents(l),n.directivePropList=a,n}return i(t,e),t}(r.ComplexBase);c.decorators=[{type:t.Directive,args:[{selector:"e-levels>e-colorMappings>e-colorMapping",inputs:a,outputs:l,queries:{}}]}],c.ctorParameters=function(){return[{type:t.ViewContainerRef}]};var p=function(e){function t(){return e.call(this,"colormapping")||this}return i(t,e),t}(r.ArrayBase);p.decorators=[{type:t.Directive,args:[{selector:"e-levels>e-colorMappings",queries:{children:new t.ContentChildren(c)}}]}],p.ctorParameters=function(){return[]};var s=this&&this.__decorate||function(e,t,r,n){var o,i=arguments.length,a=i<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,r):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,r,n);else for(var l=e.length-1;l>=0;l--)(o=e[l])&&(a=(i<3?o(a):i>3?o(t,r,a):o(t,r))||a);return i>3&&a&&Object.defineProperty(t,r,a),a},d=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},g=["autoFill","border","colorMapping","fill","groupGap","groupPadding","groupPath","headerAlignment","headerFormat","headerHeight","headerStyle","headerTemplate","opacity","showHeader","templatePosition"],u=[],m=function(e){function t(t){var n=e.call(this)||this;return n.viewContainerRef=t,n.tags=["colorMapping"],r.setValue("currentInstance",n,n.viewContainerRef),n.registerEvents(u),n.directivePropList=g,n}return i(t,e),t}(r.ComplexBase);m.decorators=[{type:t.Directive,args:[{selector:"e-levels>e-level",inputs:g,outputs:u,queries:{childColorMapping:new t.ContentChild(p)}}]}],m.ctorParameters=function(){return[{type:t.ViewContainerRef}]},m.propDecorators={headerTemplate:[{type:t.ContentChild,args:["headerTemplate"]}]},s([r.Template(),d("design:type",Object)],m.prototype,"headerTemplate",void 0);var h=function(e){function t(){return e.call(this,"levels")||this}return i(t,e),t}(r.ArrayBase);h.decorators=[{type:t.Directive,args:[{selector:"ej-treemap>e-levels",queries:{children:new t.ContentChildren(m)}}]}],h.ctorParameters=function(){return[]};var f=this&&this.__decorate||function(e,t,r,n){var o,i=arguments.length,a=i<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,r):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,r,n);else for(var l=e.length-1;l>=0;l--)(o=e[l])&&(a=(i<3?o(a):i>3?o(t,r,a):o(t,r))||a);return i>3&&a&&Object.defineProperty(t,r,a),a},T=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},M=["allowImageExport","allowPdfExport","allowPrint","background","border","breadcrumbConnector","colorValuePath","dataSource","description","drillDownView","enableBreadcrumb","enableDrillDown","enablePersistence","enableRtl","equalColorValuePath","format","height","highlightSettings","initialDrillDown","layoutType","leafItemSettings","legendSettings","levels","locale","margin","palette","query","rangeColorValuePath","renderDirection","selectionSettings","tabIndex","theme","titleSettings","tooltipSettings","useGroupingSeparator","weightValuePath","width"],v=["beforePrint","click","doubleClick","drillEnd","drillStart","itemClick","itemHighlight","itemMove","itemRendering","itemSelected","legendItemRendering","legendRendering","load","loaded","mouseMove","resize","rightClick","tooltipRendering"],C=[""];e.TreeMapComponent=function(e){function t(t,n,o,i){var a=e.call(this)||this;a.ngEle=t,a.srenderer=n,a.viewContainerRef=o,a.injector=i,a.tags=["levels"],a.element=a.ngEle.nativeElement,a.injectedModules=a.injectedModules||[];try{var l=a.injector.get("TreeMapTreeMapTooltip");-1===a.injectedModules.indexOf(l)&&a.injectedModules.push(l)}catch(c){}try{l=a.injector.get("TreeMapTreeMapLegend");-1===a.injectedModules.indexOf(l)&&a.injectedModules.push(l)}catch(p){}try{l=a.injector.get("TreeMapTreeMapHighlight");-1===a.injectedModules.indexOf(l)&&a.injectedModules.push(l)}catch(s){}try{l=a.injector.get("TreeMapTreeMapSelection");-1===a.injectedModules.indexOf(l)&&a.injectedModules.push(l)}catch(d){}try{l=a.injector.get("TreeMapPrint");-1===a.injectedModules.indexOf(l)&&a.injectedModules.push(l)}catch(g){}try{l=a.injector.get("TreeMapPdfExport");-1===a.injectedModules.indexOf(l)&&a.injectedModules.push(l)}catch(u){}try{l=a.injector.get("TreeMapImageExport");-1===a.injectedModules.indexOf(l)&&a.injectedModules.push(l)}catch(m){}return a.registerEvents(v),a.addTwoWay.call(a,C),r.setValue("currentInstance",a,a.viewContainerRef),a.context=new r.ComponentBase,a}return i(t,e),t.prototype.ngOnInit=function(){this.context.ngOnInit(this)},t.prototype.ngAfterViewInit=function(){this.context.ngAfterViewInit(this)},t.prototype.ngOnDestroy=function(){this.context.ngOnDestroy(this)},t.prototype.ngAfterContentChecked=function(){this.tagObjects[0].instance=this.childLevels,this.context.ngAfterContentChecked(this)},t}(n.TreeMap),e.TreeMapComponent.decorators=[{type:t.Component,args:[{selector:"ejs-treemap",inputs:M,outputs:v,template:"",changeDetection:t.ChangeDetectionStrategy.OnPush,queries:{childLevels:new t.ContentChild(h)}}]}],e.TreeMapComponent.ctorParameters=function(){return[{type:t.ElementRef},{type:t.Renderer2},{type:t.ViewContainerRef},{type:t.Injector}]},e.TreeMapComponent.propDecorators={tooltipSettings_template:[{type:t.ContentChild,args:["tooltipSettingsTemplate"]}],leafItemSettings_labelTemplate:[{type:t.ContentChild,args:["leafItemSettingsLabelTemplate"]}]},f([r.Template(),T("design:type",Object)],e.TreeMapComponent.prototype,"tooltipSettings_template",void 0),f([r.Template(),T("design:type",Object)],e.TreeMapComponent.prototype,"leafItemSettings_labelTemplate",void 0),e.TreeMapComponent=f([r.ComponentMixins([r.ComponentBase]),T("design:paramtypes",[t.ElementRef,t.Renderer2,t.ViewContainerRef,t.Injector])],e.TreeMapComponent);var y=function(){return function(){}}();y.decorators=[{type:t.NgModule,args:[{imports:[o.CommonModule],declarations:[e.TreeMapComponent,c,p,m,h],exports:[e.TreeMapComponent,c,p,m,h]}]}],y.ctorParameters=function(){return[]};var S={provide:"TreeMapTreeMapTooltip",useValue:n.TreeMapTooltip},x={provide:"TreeMapTreeMapLegend",useValue:n.TreeMapLegend},P={provide:"TreeMapTreeMapHighlight",useValue:n.TreeMapHighlight},j={provide:"TreeMapTreeMapSelection",useValue:n.TreeMapSelection},b={provide:"TreeMapPrint",useValue:n.Print},R={provide:"TreeMapPdfExport",useValue:n.PdfExport},w={provide:"TreeMapImageExport",useValue:n.ImageExport},O=function(){return function(){}}();O.decorators=[{type:t.NgModule,args:[{imports:[o.CommonModule,y],exports:[y],providers:[S,x,P,j,b,R,w]}]}],O.ctorParameters=function(){return[]},e.ColorMappingDirective=c,e.ColorMappingsDirective=p,e.LevelDirective=m,e.LevelsDirective=h,e.TreeMapModule=y,e.TreeMapAllModule=O,e.TreeMapTooltipService=S,e.TreeMapLegendService=x,e.TreeMapHighlightService=P,e.TreeMapSelectionService=j,e.PrintService=b,e.PdfExportService=R,e.ImageExportService=w,e.ɵa=M,e.ɵb=v,e.TreeMap=n.TreeMap,e.LevelsData=n.LevelsData,e.Border=n.Border,e.Margin=n.Margin,e.Font=n.Font,e.CommonTitleSettings=n.CommonTitleSettings,e.SubTitleSettings=n.SubTitleSettings,e.TitleSettings=n.TitleSettings,e.ColorMapping=n.ColorMapping,e.LegendSettings=n.LegendSettings,e.InitialDrillSettings=n.InitialDrillSettings,e.LeafItemSettings=n.LeafItemSettings,e.TooltipSettings=n.TooltipSettings,e.SelectionSettings=n.SelectionSettings,e.HighlightSettings=n.HighlightSettings,e.LevelSettings=n.LevelSettings,e.load=n.load,e.loaded=n.loaded,e.beforePrint=n.beforePrint,e.itemRendering=n.itemRendering,e.drillStart=n.drillStart,e.drillEnd=n.drillEnd,e.itemSelected=n.itemSelected,e.itemHighlight=n.itemHighlight,e.tooltipRendering=n.tooltipRendering,e.itemClick=n.itemClick,e.itemMove=n.itemMove,e.click=n.click,e.doubleClick=n.doubleClick,e.rightClick=n.rightClick,e.mouseMove=n.mouseMove,e.legendItemRendering=n.legendItemRendering,e.legendRendering=n.legendRendering,e.resize=n.resize,e.defaultFont=n.defaultFont,e.Theme=n.Theme,e.getThemeStyle=n.getThemeStyle,e.Size=n.Size,e.stringToNumber=n.stringToNumber,e.Rect=n.Rect,e.RectOption=n.RectOption,e.PathOption=n.PathOption,e.measureText=n.measureText,e.TextOption=n.TextOption,e.textTrim=n.textTrim,e.Location=n.Location,e.findPosition=n.findPosition,e.createTextStyle=n.createTextStyle,e.renderTextElement=n.renderTextElement,e.setItemTemplateContent=n.setItemTemplateContent,e.getElement=n.getElement,e.itemsToOrder=n.itemsToOrder,e.isContainsData=n.isContainsData,e.findChildren=n.findChildren,e.findHightLightItems=n.findHightLightItems,e.getTemplateFunction=n.getTemplateFunction,e.convertElement=n.convertElement,e.findLabelLocation=n.findLabelLocation,e.measureElement=n.measureElement,e.getArea=n.getArea,e.getShortestEdge=n.getShortestEdge,e.convertToContainer=n.convertToContainer,e.convertToRect=n.convertToRect,e.getMousePosition=n.getMousePosition,e.colorMap=n.colorMap,e.deSaturationColor=n.deSaturationColor,e.colorCollections=n.colorCollections,e.rgbToHex=n.rgbToHex,e.getColorByValue=n.getColorByValue,e.getGradientColor=n.getGradientColor,e.getPercentageColor=n.getPercentageColor,e.getPercentage=n.getPercentage,e.wordWrap=n.wordWrap,e.textWrap=n.textWrap,e.hide=n.hide,e.orderByArea=n.orderByArea,e.maintainSelection=n.maintainSelection,e.legendMaintain=n.legendMaintain,e.removeClassNames=n.removeClassNames,e.applyOptions=n.applyOptions,e.textFormatter=n.textFormatter,e.formatValue=n.formatValue,e.ColorValue=n.ColorValue,e.convertToHexCode=n.convertToHexCode,e.componentToHex=n.componentToHex,e.convertHexToColor=n.convertHexToColor,e.colorNameToHex=n.colorNameToHex,e.drawSymbol=n.drawSymbol,e.renderLegendShape=n.renderLegendShape,e.isParentItem=n.isParentItem,e.TreeMapAjax=n.TreeMapAjax,e.removeShape=n.removeShape,e.removeLegend=n.removeLegend,e.setColor=n.setColor,e.removeSelectionWithHighlight=n.removeSelectionWithHighlight,e.getLegendIndex=n.getLegendIndex,e.pushCollection=n.pushCollection,e.triggerDownload=n.triggerDownload,e.removeElement=n.removeElement,e.TreeMapLegend=n.TreeMapLegend,e.LayoutPanel=n.LayoutPanel,e.TreeMapHighlight=n.TreeMapHighlight,e.TreeMapSelection=n.TreeMapSelection,e.TreeMapTooltip=n.TreeMapTooltip,e.ImageExport=n.ImageExport,e.PdfExport=n.PdfExport,e.Print=n.Print,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=ej2-angular-treemap.umd.min.js.map
