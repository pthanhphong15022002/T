{"version":3,"file":"levels.directive.d.ts","sources":["levels.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ViewContainerRef } from '@angular/core';\nimport { ComplexBase, ArrayBase } from '@syncfusion/ej2-angular-base';\n/**\n * Level Directive\n * ```html\n * <e-levels>\n * <e-level></e-level>\n * </e-levels>\n * ```\n */\nexport declare class LevelDirective extends ComplexBase<LevelDirective> {\n    private viewContainerRef;\n    directivePropList: any;\n    childColorMapping: any;\n    tags: string[];\n    /**\n     * Enables or disables the automatic filling of the colors in the items in the treemap component.\n     * @default false\n     */\n    autoFill: any;\n    /**\n     * Sets and gets the options for customizing the color and width of the border of\n     * the levels of the treemap component.\n     */\n    border: any;\n    /**\n     * Sets and gets the options for customizing the color-mapping in the treemap component.\n     */\n    colorMapping: any;\n    /**\n     * Sets and gets the fill color of the level in the treemap component.\n     * @default null\n     */\n    fill: any;\n    /**\n     * Sets and gets the gap between the levels in the treemap component.\n     * @default 0\n     */\n    groupGap: any;\n    /**\n     * Sets and gets the padding of levels in the treemap component.\n     * @default 10\n     */\n    groupPadding: any;\n    /**\n     * Sets and gets the value path from the data source in the treemap component to render the item.\n     * @default null\n     */\n    groupPath: any;\n    /**\n     * Sets and gets the alignment of the header of the treemap component.\n     * @default 'Near'\n     */\n    headerAlignment: any;\n    /**\n     * Sets and gets the format of header of the levels in the treemap component.\n     * @default null\n     */\n    headerFormat: any;\n    /**\n     * Sets and gets the height of header in the treemap component.\n     * @default 20\n     */\n    headerHeight: any;\n    /**\n     * Sets and gets the options for customizing the style of header of the treemap component.\n     */\n    headerStyle: any;\n    /**\n     * Sets and gets the opacity in the treemap component.\n     * @default 1\n     */\n    opacity: any;\n    /**\n     * Shows or hides the header in level of the treemap component.\n     * @default true\n     */\n    showHeader: any;\n    /**\n     * Sets and gets the options for customizing the template position of the treemap component.\n     * @default 'TopLeft'\n     */\n    templatePosition: any;\n    /**\n     * Sets and gets the template for header in the treemap component.\n     * @default null\n     */\n    headerTemplate: any;\n    constructor(viewContainerRef: ViewContainerRef);\n}\n/**\n * Level Array Directive\n * @private\n */\nexport declare class LevelsDirective extends ArrayBase<LevelsDirective> {\n    constructor();\n}\n"]}