.row-grid-collapse
{
    color: #BEBEBE;
}

.grid-collapse
{
    position: relative;
    .accordion-item
    {
        border-left-width: 5px;
        border-radius: 5px;
        margin: 10px 0;
    }
    .accordion-button
    {
        padding: 0 !important;
    }
    .accordion-button::after
    {
        position: absolute !important;
        left: 0 !important;
        background-image: var(--bs-accordion-btn-icon) !important;
    }
    .accordion-button:not(.collapsed),.accordion-button.collapsed
    {
        color: black !important;
        background-color: white;
        margin: 0 13px;
        width: 15px;
    }
    .accordion-body
    {
        padding: 15px 0px 0px 0px !important;
    }
}

.grid-collapse-default
{
    .accordion-item
    {
        border: none !important;
    }
    .accordion-button:not(.collapsed) , .accordion-button.collapsed
    {
        color: #BEBEBE !important;
        background-color: white;
    }
    .accordion-button::after
    {
        width: 0 !important;
    }
    .accordion-body
    {
        padding: 0 17px;
    }
}
.bp-cricle-user
{
    i
    {
        color: #AA7EFD;
    }
    background-color: #F7EAFF;
}
.bp-attach-number
{
    top: 16px;
    left: 14px;
    font-size: 10px;
    background-color: #EAF0FF;
    width: 12px;
    height: 12px;
    color: #005DC7;
}
.prd-nav
{
    .nav-link
    {
      padding: 9px 35px !important;
      background-color: var(--gray-150);
      margin-right: 3px;
      color: var(--gray-600);
      cursor: pointer;
    }
    .nav-link.active
    {
      border: none !important;
      background-color: var(--text-primary) !important;
      color: white !important;
    }
} 
.bg-row-text-active
{
    color: var(--primary-active);
}
.bg-row-active
{
    background-color: var(--primary-lighter);
    i
    {
        font-size: 18px;
    }
}


.bp-progress-release {
    width: 75px;
    height: 75px !important;
    float: left; 
    line-height: 150px;
    background: none;
    margin: 0 0 0 30px;
    box-shadow: none;
    position: relative;
  }
  .bp-progress-release:after {
    content: "";
    width: 100%;
    height: 100%;
    border-radius: 50%;
    border: 8px solid #F1F2F6;
    position: absolute;
    top: 0;
    left: 0;
  }
  .bp-progress-release>span {
    width: 50%;
    height: 100%;
    overflow: hidden;
    position: absolute;
    top: 0;
    z-index: 1;
  }
  .bp-progress-release .progress-left {
    left: 0;
  }
  .bp-progress-release .progress-bar {
    width: 100%;
    height: 100%;
    background: none;
    border-width: 8px;
    border-style: solid;
    position: absolute;
    top: 0;
  }
  .bp-progress-release .progress-left .progress-bar {
    left: 100%;
    border-top-right-radius: 80px;
    border-bottom-right-radius: 80px;
    border-left: 0;
    -webkit-transform-origin: center left;
    transform-origin: center left;
  }
  .bp-progress-release .progress-right {
    right: 0;
  }
  .bp-progress-release .progress-right .progress-bar {
    left: -100%;
    border-top-left-radius: 80px;
    border-bottom-left-radius: 80px;
    border-right: 0;
    -webkit-transform-origin: center right;
    transform-origin: center right;
    animation: loading-1 1s linear forwards;
  }
  .bp-progress-release .progress-value {
    border-radius: 50%;
    background: white;
    text-align: center;
  }
  .bp-progress-release.blues .progress-bar {
    border-color: #049dff;
  }
  .bp-progress-release.blues .progress-left .progress-bar {
    animation: loading-2 1s linear forwards 1s;
  }
  .bp-progress-release.yellow .progress-bar {
    border-color: #fdba04;
  }
  .bp-progress-release.yellow .progress-right .progress-bar {
    animation: loading-3 1s linear forwards;
  }
  .bp-progress-release.yellow .progress-left .progress-bar {
    animation: none;
  }
  @keyframes loading-1 {
    0% {
      -webkit-transform: rotate(0deg);
      transform: rotate(0deg);
    }
    100% {
      -webkit-transform: rotate(180deg);
      transform: rotate(180deg);
    }
  }
  @keyframes loading-2 {
    0% {
      -webkit-transform: rotate(0deg);
      transform: rotate(0deg);
    }
    100% {
      -webkit-transform: rotate(144deg);
      transform: rotate(144deg);
    }
  }
  @keyframes loading-3 {
    0% {
      -webkit-transform: rotate(0deg);
      transform: rotate(0deg);
    }
    100% {
      -webkit-transform: rotate(135deg);
      transform: rotate(135deg);
    }
  }
  .bp-ngbTab-content
  {
    height: calc(100% - 28px);
    border-top-right-radius: 5px
  }
  .bg-bp-tb-header
  {
    background-color: white;
    border-top-right-radius: 2px;
    border-bottom-right-radius: 2px;
    .bp-stepName
    {
      color: var(--text-primary);
      font-weight: 600;
    }
  }
  .bg-bp-tb-header.collapsed
  {
    background-color: var(--gray-150);
    .bp-stepName
    {
      color: black;
      font-weight: normal;
    }
  }
  .bp-img-folder
  {
    width: 22px;
  }
  .pt-1px
  {
    padding-top: 1px;
  }
  .bp-ins-sta-cl
  {
    border-top-left-radius: 8px;
    border-bottom-left-radius: 8px;
  }

  $background-color: white;     // all backgrounds
  $connector-color: #369;       // connectors and text
  $shadow-color: #8F949A;
  $box-color: #afafaf;          // box border

  // major dimensions
  // ----------------
  $tree-margin-left: 0px;

  $entry-height: 3em;           // total hight of entry: card + gap on top

  $card-ident: 2em;             // card horizontal ident (to nearest connector)
  $card-height: 1.5em;
  $card-width: 15em;            // 'auto' is acceptable
  $card-padding-top: ($card-height - 1em)/2;
  $card-padding-side: $card-padding-top * 2;

  $hconnector-top: 1em;

  // =================== Don't edit below this line ========================

  $card-margin-top: $entry-height - $card-height; // card vertical gap
  $connector-vident: ($entry-height)/2 + $card-margin-top - 1.5em;
  $tree-ident: $card-width;     // connector horizontal ident (to card's front)

  $background-color-presudo: $background-color;   //for dev: beige;
  $box-shadow: 1px 1px 4px $shadow-color;
  $width-presudo: 0px;
  
  .bp-tree {
    & ul {
      margin: -1.5em 0 0 1em; // whole tree indentation TODO:
      padding:0;
      list-style:none;
      color:#E4E4E9;
      position:relative;
    }
    &:before, ul:before {
      content:"";
      display:block;
      width:$width-presudo;
      position:absolute;
      top:0;
      bottom:0;
      left:0;
      border-left:1px solid; // vertical connectors
    }
    &:before
    {
      border-left: none 
    }
    & li {
      margin:0;
      padding: $card-margin-top 0 0 $card-ident; // indentation + .5em
      position:relative;
      &:before {
        border-top:1px solid;
        content:"";
        display:block;
        height:100%;
        left:0;
        margin-top: $hconnector-top; // border top width
        position:absolute;
        top: $connector-vident; // (line-height/2)
        width:$card-ident; // same with indentation
      }
      &:last-child:before {
        background: $background-color-presudo; // same with body background
        bottom:0;
        height:auto;
        top: $connector-vident; // (line-height/2)
      }
    }
    & > li:before {
      border-top:none !important;
    }
    & li div {
      margin: -2px 0 0 0;
      color: black;
    }
  
  }
  
  // Espasially for root level ul
  ul.tree {
    margin-left: 0px; // Set ident for the root ul (whole tree ident)
    &:before {
      border-left:none; // Remove left border for the root ul
    }
  }
  
  // Put it to sticky divs
  .sticky {
    position: -webkit-sticky;
    position: sticky;
    top: 0px;
    width: 100%;
  }

  .bp-tree-2
  {
    &ul
    {
      margin: -1.5em 0 0 0.7em !important;
    }
  }
.border-radius-4px
{
  border-radius: 4px;
}